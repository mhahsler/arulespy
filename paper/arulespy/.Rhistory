reticulate::repl_python()
install.packages("rticles")
install.packages("rticles")
knit_with_parameters("~/baR/arulespy/paper/arulespy/arulespy.Rmd")
library(arules)
set.seed(111)
# make transactions with target
li <- list()
for(i in 1:30){
s <- sample(letters,10,replace = T)
if(sample(c(T,F),1,prob = c(1,5))){
# a set of transactions that lead to a target
s <- c(s,    c("A","B","C","target") )
}
s <- make.unique(s)
li[[i]] <- s
}
library(arules)
trans <- transactions(li)
supp <- 0.05
conf <- 0.1
apri <- apriori(trans,
parameter=list(support = supp,
confidence = conf,
minlen=2,
maxlen=4),
appearance = list(rhs="target"))
apri
inspect(apri)
fim4r()
fim4r()
fpgr <- fim4r(li,
method = "fpgrowth",
target = "rules",
supp = supp,
conf = conf,
verbose = T,
appear = list(c("target"), c("c")))
apri
inspect(fpgr)
? fim4r
fim4r()
fpgr <- fim4r(li,
method = "fpgrowth",
target = "rules",
supp = supp,
conf = conf,
verbose = T,
appear = list("c" = c("target"))
)
fim4r()
fpgr <- fim4r(li,
method = "fpgrowth",
target = "rules",
supp = supp,
conf = conf,
verbose = T,
appear = list("c" = c("target"))
fim4r()
fim4r()
fpgr <- fim4r(li,
method = "fpgrowth",
target = "rules",
supp = supp,
conf = conf,
verbose = T,
appear = list("c" = c("target")))
fim4r()
fpgr <- fim4r(li,
method = "fpgrowth",
target = "rules",
supp = supp,
conf = conf,
verbose = T,
appear = list(c("c" = "target"))
)
fim4r()
fpgr <- fim4r(li,
method = "fpgrowth",
target = "rules",
supp = supp,
conf = conf,
verbose = T,
appear = list(c("target"), c("c")))
fim4r()
fpgr <- fim4r(li,
method = "fpgrowth",
target = "rules",
supp = supp,
conf = conf,
verbose = T,
appear = list(c("target"), c("-")))
fim4r()
fpgr <- fim4r(li,
method = "fpgrowth",
target = "rules",
supp = supp,
conf = conf,
verbose = T,
appear = list(c("target"), c("a")))
inspect(fpgr)
fim4r()
fpgr <- fim4r(li,
method = "fpgrowth",
target = "rules",
supp = supp,
conf = conf,
verbose = T,
appear = list(c("target"), c("-")))
inspect(fpgr)
fim4r()
fpgr <- fim4r(li,
method = "fpgrowth",
target = "rules",
supp = supp,
conf = conf,
verbose = T,
appear = list(c("target"), c("x")))
inspect(fpgr)
fim4r()
fpgr <- fim4r(li,
method = "fpgrowth",
target = "rules",
supp = supp,
conf = conf,
verbose = T,
appear = list(c("target"), c("x")), verb = T)
fim4r()
fpgr <- fim4r(li,
method = "fpgrowth",
target = "rules",
supp = supp,
conf = conf,
verbose = T,
appear = list(47, c("x")), verb = T)
fim4r()
fpgr <- fim4r(li,
method = "fpgrowth",
target = "rules",
supp = supp,
conf = conf,
verbose = T,
appear = list(47, c("x")))
fim4r()
fpgr <- fim4r(li,
method = "fpgrowth",
target = "rules",
supp = supp,
conf = conf,
verbose = T,
appear = list("targer", c("-")))
fim4r()
fpgr <- fim4r(li,
method = "fpgrowth",
target = "rules",
supp = supp,
conf = conf,
verbose = T,
appear = list("target", c("-")))
