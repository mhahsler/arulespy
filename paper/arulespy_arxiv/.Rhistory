install.packages("arules")
data(mtcars)
mtcars
? mtcars
library(ggplot2)
ggplot(mtcars, aes(x = wt, y = mpg)) + geom_point()
ggplot(mtcars, aes(x = wt, y = mpg)) + geom_point() + geom_smooth(method = lm)
cor(mtcars$wt, mtcars$mgp)
cor(mtcars$wt, mtcars$mpg)
cor.test(mtcars$wt, mtcars$mpg)
cor(mtcars)
cor.test(mtcars$wt, mtcars$mpg)
ggplot(mtcars, aes(x = wt, y = mpg)) + geom_point() + geom_smooth()
ggplot(mtcars, aes(x = wt, y = mpg)) + geom_point() + geom_smooth(method = lm)
? lm
lm
model <- lm(mpg ~ wt, data = mtcars)
model
37.285 -5.344*2.6
summary(model)
mtcars
model <- lm(mpg ~ wt + cyl + hp, data = mtcars)
model
38.75 -3.17 * 2.6 -0.94162 * 6	 -0.01804 * 110
summary(model)
model <- lm(mpg ~ hp, data = mtcars)
summary(model)
ggplot(mtcars, aes(x = hp, y = mpg)) + geom_point() + geom_smooth(method = lm)
ggplot(mtcars, aes(x = hp, y = mpg)) + geom_point() + geom_smooth()
View(mtcars)
View(mtcars)
mtcars
model <- lm(mpg ~ ., data = mtcars)
model
summary(model)
m <- step(model)
m
summary(m)
predict(model, head(mtcars))
car <- mtcars[1, ]
car
car$mpg <- NA
car
car$wt <- 1.0
names(car)
colnames(car)
rownames(car)
rownames(car) <- "My car"
car
car$qsec <- 10
car
? mtcars
predict(model, car)
car$qsec <- 20
predict(model, car)
car
car$qsec <- 25
car$wt <- .8
predict(model, car)
library(arules)
data(Groceries)
info(Groceries)
?info
iteminfo(Groceries)
itemInfo(Groceries)
transactionInfo(Groceries)
Groceries
library(stream)
stream <- DSD_ReadStream(file = "~/Downloads/Small_data.txt",sep = ",",
header = TRUE, skip = 0, outofpoints = c("stop"), take=c(1:3,5:7,.class=4))
stream_scaled <- DSD_ScaleStream(stream, dim=c(1:3))
get_points(stream_scaled,10)
dbstream <- DSC_DBSTREAM(r=.19,alpha=.31,minweight = .1)
update(dbstream,stream_scaled,1000)
stream <- DSD_ReadStream(file = "~/Downloads/Small_data.txt",sep = ",",
header = TRUE, skip = 0, outofpoints = c("stop"), take=c(1:3,5:7,.class=4))
stream_scaled <- DSD_ScaleStream(stream, dim=c(1:3))
get_points(stream_scaled,10)
dbstream <- DSC_DBSTREAM(r=.19,alpha=.31,minweight = .1)
update(dbstream,stream_scaled,100)
output_m_.1<-evaluate_stream(dbstream, stream_scaled, measure = c("numMicro","numMacro","SSQ", "noisePredicted","purity","cRand","precision"),
n=100, horizon=10,verbose=TRUE)
? plot
library("arulesViz")
? plot
unlink("baR/arulespy/paper/arulespy_arxiv/paper_cache", recursive = TRUE)
tinytex::latexmk(paper.tex, clean = FALSE)
tinytex::latexmk("paper.tex", clean = FALSE)
setwd("~/baR/arulespy/paper/arulespy_arxiv")
tinytex::latexmk("paper.tex", clean = FALSE)
tinytex::latexmk("paper.tex", clean = FALSE)
unlink("paper_cache", recursive = TRUE)
tinytex::latexmk("paper.tex", clean = FALSE)
source("~/baR/arulespy/paper/arulespy_arxiv/clean_bib.R")
setwd("~/baR/arulespy/paper/arulespy_arxiv")
source("~/baR/arulespy/paper/arulespy_arxiv/clean_bib.R")
source("~/baR/arulespy/paper/arulespy_arxiv/clean_bib.R")
source("~/baR/arulespy/paper/arulespy_arxiv/clean_bib.R")
source("~/baR/arulespy/paper/arulespy_arxiv/clean_bib.R")
source("~/baR/arulespy/paper/arulespy_arxiv/clean_bib.R")
source("~/baR/arulespy/paper/arulespy_arxiv/clean_bib.R")
source("~/baR/arulespy/paper/arulespy_arxiv/clean_bib.R")
source("~/baR/arulespy/paper/arulespy_arxiv/clean_bib.R")
source("~/baR/arulespy/paper/arulespy_arxiv/clean_bib.R")
tinytex::latexmk("papaer.tex", clean = FALSE)
tinytex::latexmk("paper.tex", clean = FALSE)
source("~/baR/arulespy/paper/arulespy_arxiv/clean_bib.R")
source("~/baR/arulespy/paper/arulespy_arxiv/clean_bib.R")
source("~/baR/arulespy/paper/arulespy_arxiv/clean_bib.R")
? grep
source("~/baR/arulespy/paper/arulespy_arxiv/clean_bib.R")
source("~/baR/arulespy/paper/arulespy_arxiv/clean_bib.R")
